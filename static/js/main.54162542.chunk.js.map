{"version":3,"sources":["components/Button.js","components/Start.js","components/GameOver.js","components/QuestionPanel.js","components/AnswerButton.js","components/AnswerPanel.js","components/ScorePanel.js","components/questions.js","components/Game.js","components/HighScores.js","components/App.js","index.js"],"names":["Button","icon","text","onClick","className","Start","history","useHistory","id","to","localStorage","setItem","push","GameOver","score","QuestionPanel","question","AnswerButton","index","choice","answer","AnswerPanel","choices","handleAnswer","map","ScorePanel","questions","Game","useState","setScore","questionIndex","setQuestionIndex","userScore","parseInt","getItem","useEffect","console","log","length","lastIndexOf","userChoice","HighScores","App","getUserConfirmation","message","callback","window","confirm","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54162542.chunk.js","sourcesContent":["import React from 'react';\nconst Button = ({ icon, text, onClick }) => {\n  return (\n    <div className='btn' onClick={onClick}>\n      <p className='btn-icon'>{icon}</p>\n      <p className='btn-text'>{text}</p>\n    </div>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Button from './Button';\n\nconst Start = () => {\n  let history = useHistory();\n  // Set score to 0 and redirect with useHistory hook\n  const startNewGame = () => {\n    localStorage.setItem('coding-quiz-score', 0);\n    history.push('/game');\n  };\n\n  const viewHighScores = () => {\n    history.push('/high_scores');\n  };\n\n  return (\n    <div className='container'>\n      <div className='start-panel'>\n        <div className='start-title'>\n          <h1>Coding Quiz!</h1>\n        </div>\n        <div className='start-btns'>\n          <Button\n            id='start-btn'\n            text={'Start'}\n            to={'/game'}\n            onClick={startNewGame}\n          />\n          <Button\n            id='highscore-btn'\n            text={'High Scores'}\n            onClick={viewHighScores}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Start;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Button from './Button';\n\nconst GameOver = ({ score }) => {\n  let history = useHistory();\n\n  const redirectHome = () => {\n    history.push('/');\n  };\n  return (\n    <div className='container'>\n      <div className='start-panel'>\n        <h1>Game Over</h1>\n        <h2>Score</h2>\n        <h1>{score}</h1>\n        <Button id='home-btn' text='Home' onClick={redirectHome} />\n      </div>\n    </div>\n  );\n};\n\nexport default GameOver;\n","import React from 'react';\n\nconst QuestionPanel = ({ question }) => {\n  return (\n    <div id='question'>\n      <h1>{question}</h1>\n    </div>\n  );\n};\n\nexport default QuestionPanel;\n","import React from 'react';\nconst AnswerButton = ({ index, choice, answer, onClick }) => {\n  return (\n    <div\n      className='choice-btn'\n      onClick={() => {\n        onClick(choice);\n      }}\n    >\n      <span className='choice-prefix'>{index + 1}. </span>\n      <span className='choice-text'>{choice}</span>\n    </div>\n  );\n};\n\nexport default AnswerButton;\n","import React from 'react';\nimport AnswerButton from './AnswerButton';\n\nconst AnswerPanel = ({ choices, answer, handleAnswer }) => {\n  return (\n    <div className='answer-panel'>\n      {choices.map((choice, index) => {\n        if (choice === answer) {\n          return (\n            <AnswerButton\n              id='correct-answer'\n              key={index}\n              index={index}\n              choice={choice}\n              answer={answer}\n              onClick={handleAnswer}\n            />\n          );\n        } else {\n          return (\n            <AnswerButton\n              key={index}\n              index={index}\n              choice={choice}\n              answer={answer}\n              onClick={handleAnswer}\n            />\n          );\n        }\n      })}\n    </div>\n  );\n};\n\nexport default AnswerPanel;\n","import React from 'react';\n\nconst ScorePanel = ({ score }) => {\n  return (\n    <div id='game' className='justify-center flex-column'>\n      <div className='hud-item'>\n        <p className='hud-prefix'>Score</p>\n        <h1 className='hud-main-text' id='score'>\n          {score}\n        </h1>\n      </div>\n    </div>\n  );\n};\n\nexport default ScorePanel;\n","// Questions array\nconst questions = [\n  {\n    question: 'Which language is used to mark-up webpages?',\n    choices: ['HTML', 'CSS', 'Javascript', 'SQL'],\n    answer: 'HTML',\n  },\n  {\n    question: 'Which of these is a CSS framework?',\n    choices: ['Sass', 'jQuery', 'Bootstrap', 'Ruby'],\n    answer: 'Bootstrap',\n  },\n  {\n    question: 'Which type of brackets are used in a Javascript array?',\n    choices: ['()', '{}', '<>', '[]'],\n    answer: '[]',\n  },\n  {\n    question: 'whatIsThisCalled?',\n    choices: ['Camel case', 'A function', 'Javascript', 'Bad grammar'],\n    answer: 'Camel case',\n  },\n\n  // blank question added to solve last index issue to get to game over screen correctly need to find a better solution\n  {\n    question: '',\n    choices: [],\n    answer: '',\n  },\n];\n\nexport default questions;\n","import React, { useEffect, useState } from 'react';\nimport { Prompt, useHistory } from 'react-router-dom';\nimport GameOver from './GameOver';\nimport QuestionPanel from './QuestionPanel';\nimport AnswerPanel from './AnswerPanel';\nimport ScorePanel from './ScorePanel';\nimport questions from './questions';\n\nconst Game = () => {\n  let history = useHistory();\n  const [gameStarted] = useState(true);\n  const [score, setScore] = useState(0);\n  const [questionIndex, setQuestionIndex] = useState(0);\n\n  const userScore = parseInt(localStorage.getItem('coding-quiz-score'));\n  const question = questions[questionIndex].question;\n  const choices = questions[questionIndex].choices;\n  const answer = questions[questionIndex].answer;\n\n  // Avoid resetting score on reload\n  useEffect(() => {\n    if (userScore) {\n      setScore(userScore);\n      console.log(questionIndex);\n      console.log(questions.length);\n      console.log(questions.lastIndexOf());\n    }\n  }, []);\n\n  // Update local storage score on state change\n  useEffect(() => {\n    localStorage.setItem('coding-quiz-score', score);\n  }, [score]);\n\n  // Game over\n\n  const handleAnswer = (userChoice) => {\n    // add additional logic here to show which one is the correct one\n    if (userChoice === answer) {\n      setScore(score + 1);\n      setQuestionIndex(questionIndex + 1);\n    }\n    setQuestionIndex(questionIndex + 1);\n  };\n\n  if (questionIndex === questions.length - 1) {\n    return <GameOver score={score} />;\n  }\n\n  return (\n    <section className='game'>\n      <div className='game-panel'>\n        <ScorePanel className='score-panel' score={score} />\n        {/* <Button id='home-btn' text='Home' onClick={redirectHome} /> */}\n        <br />\n        <QuestionPanel className='question-panel' question={question} />\n        <AnswerPanel\n          className='answer-panel'\n          choices={choices}\n          answer={answer}\n          handleAnswer={handleAnswer}\n        />\n        {/* \n        <Prompt when={gameStarted} message='Are you sure to want to leave?' /> */}\n      </div>\n    </section>\n  );\n};\n\nexport default Game;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Button from './Button';\n\nconst HighScores = () => {\n  let history = useHistory();\n  // Set score to 0 and redirect with useHistory hook\n  const redirectHome = () => {\n    history.push('/');\n  };\n  return (\n    <div className='container'>\n      <div className='start-panel'>\n        <h1>High Scores</h1>\n        <Button id='home-btn' text='Home' onClick={redirectHome} />{' '}\n      </div>\n    </div>\n  );\n};\n\nexport default HighScores;\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Start from './Start';\nimport Game from './Game';\nimport GameOver from './GameOver';\nimport HighScores from './HighScores';\nimport '../styles/style.css';\n\nconst App = () => {\n  // Callback for getUserConfirmation method, invoked by using Prompt from RRD\n  const getUserConfirmation = (message, callback) => {\n    const allowTransition = window.confirm(message);\n    callback(allowTransition);\n  };\n\n  return (\n    <main className='app'>\n      <Router getUserConfirmation={getUserConfirmation}>\n        <Switch>\n          <Route path='/' exact component={Start} />\n          <Route path='/game' exact component={Game} />\n          <Route path='/game_over' exact component={GameOver} />\n          <Route path='/high_scores' exact component={HighScores} />\n        </Switch>\n      </Router>\n    </main>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}